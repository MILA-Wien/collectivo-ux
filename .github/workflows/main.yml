name: Mach Mit Frontend build

on: [push, workflow_dispatch]
jobs:
  build:
    name: Build mach mit
    runs-on: ubuntu-latest

    steps:
      - uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Check out code
        uses: actions/checkout@v3

      - name: Download dependencies
        run: yarn install --frozen-lockfile

      #- name: Run tests
        #run: yarn test:coverage
        #run: yarn test:e2e:ci

      - name: Lint application
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: machmit-build
          path: dist/
          retention-days: 1
  test-e2e:
    name: Test e2e
    runs-on: ubuntu-latest
    needs: build
    env:
      DB_USER: postgres
      DB_PASS: postgres
      DB_HOST: localhost # default host value for the database
      DB_NAME: djtesting
      POSTGRES_PORT: 5432
      DJANGO_SECRET_KEY: test-key-not-good
    services:
      # start a postgres service container
      postgres_main:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASS }}
          POSTGRES_DB: ${{ env.DB_NAME }}
        ports:
          - 5432:5432
        # wait until postgres is ready
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      collectivo:
        image: milawien/collectivo:pr-main
        env:
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASS }}
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_HOST: postgres_main
          POSTGRES_PORT: ${{ env.POSTGRES_PORT }}
          DJANGO_SECRET_KEY: ${{ env.DJANGO_SECRET_KEY }}
        ports:
          - 8000:8000
    steps:
      - uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
      - name: Verify running services
        run: |
          echo "${{ toJson(job) }}" && \
          docker logs "${{ job.services.collectivo.id }}"
      
      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Check out code
        uses: actions/checkout@v3

      - name: Download dependencies
        run: yarn install --frozen-lockfile
      
      - name: ping collectivo
        run: curl --connect-timeout 5 --max-time 10 --retry 5 --retry-delay 0 --retry-max-time 40 collectivo:8000/api/

      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          build: yarn build

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos